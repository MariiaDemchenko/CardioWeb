@model IEnumerable<CardiologicalResearch.Models.DataView>
@using CardiologicalResearch.Models;

<script src="~/Scripts/jquery-ui-1.8.24.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-2.2.3.js"></script>
<link href="~/Content/TestsStyle.css" rel="stylesheet" />
@{
    /*ViewBag.Title = "TestingsHistory";
    List<DataView> items = ViewBag.ViewItems;

    List<DateTime> PositiveDates = ViewBag.PositiveDates;
    List<int> PositiveNumbers = ViewBag.PositiveNumbers;

    List<DateTime> NegativeDates = ViewBag.NegativeDates;
    List<int> NegativeNumbers = ViewBag.NegativeNumbers;

    List<String> testName = ViewBag.TestName;
    List<int> testCount = ViewBag.TestCount;*/

    double myBMI = ViewBag.BMI;
    int mySCORE = ViewBag.SCORE;
    
    
    List<Double> BMIs = new List<Double>();
    BMIs.Add(myBMI);
    BMIs.Add(16);
    BMIs.Add(18.5);
    BMIs.Add(25);
    BMIs.Add(30);
    BMIs.Add(35);
    BMIs.Add(40);
    BMIs.Add(50);

    List<int> SCOREs = new List<int>();
    SCOREs.Add(mySCORE);
    SCOREs.Add(1);
    SCOREs.Add(5);
    SCOREs.Add(10);
    SCOREs.Add(47);
    
    List<String> BMIName = new List<String>();
    BMIName.Add("ИМТ_пользователя");
    BMIName.Add("Дефицит_массы_тела");
    BMIName.Add("Недостаточная_масса_тела");
    BMIName.Add("Норма");
    BMIName.Add("Предожирение");
    BMIName.Add("Ожирение_I_степени");
    BMIName.Add("Ожирение_II_степени");
    BMIName.Add("Ожирение_III_степени");


    List<String> SCOREName = new List<String>();
    SCOREName.Add("SCORE_пользователя");
    SCOREName.Add("Низкий_риск");
    SCOREName.Add("Умеренный_риск");
    SCOREName.Add("Высокий_риск");
    SCOREName.Add("Очень_высокйий_риск");
    
    
    /*List<String> someString = new List<String>();
    int AI15Positive = (int)ViewBag.AI15Positive; 
    int LI15Positive = (int)ViewBag.LI15Positive;
    int SclerosisPositive = (int)ViewBag.SclerosisPositive;
    int ABIPositive = (int)ViewBag.ABIPositive;*/
    
    //List<ExaminationResultsView.>
   
    
    /*List<int> list = new List<int>();
    list.Add(0);
    list.Add(1);
    list.Add(2);
    list.Add(3);
    list.Add(4);
    list.Add(5);
    object[] array = new object[5];
    array[0] = 0;
    array[1] = 1;

    */

    var b = 10;
    string someVar="    ";
    string rowClass;
    
}

@{
    string CustomText = "Диаграммы параметров";
    string CustomTextEmpty = "Диаграммы параметров отсутствуют, необходимые данные не заполнены";
    string grey = "#E7E9ED";
    string red = "#FF6384";
    string orange = "#FF9063";
    string yellow = "#FFCE56";
    string green = "#4BC0C0";
    string lightblue = "#68C0EB";
    string blue = "#36A2EB";
    string purple = "#687FEB";    
}

@section featured {
    <section class="featured" id="personalData"></section>
}


<section class="content" id="dataTargetField">
    <h1 class="page-header">Личный кабинет</h1>
    <h1 class="page-header ph2">Статистика параметров пользователя в диаграммах</h1>

@if (myBMI == 0)
    {<text><h2 class="h2 dataTable">@CustomTextEmpty</h2></text>}
    else
    {<text>

    <h2 class="h2 dataTable">@CustomText</h2>



@*<div id="test" test-att=@Html.Raw(Json.Encode(items))></div> 
<div id="testName" test-att=@Html.Raw(Json.Encode(testName))></div> 
<div id="testCount" test-att=@Html.Raw(Json.Encode(testCount))></div> 
<div id="numbers" test-att3=@Html.Raw(Json.Encode(Numbers))></div> *@
<script src="~/Scripts/Chart.js"></script>

<div id="BMIx" test-att=@Html.Raw(Json.Encode(BMIs))></div> 
<div id="BMIy" test-att=@Html.Raw(Json.Encode(BMIName))></div> 
<div id="SCOREx" test-att=@Html.Raw(Json.Encode(SCOREs))></div>
<div id="SCOREy" test-att=@Html.Raw(Json.Encode(SCOREName))></div> 
@*<div id="Sclerosis" test-att=@Html.Raw(Json.Encode(SclerosisPositive))></div>
    <div id="ABI" test-att=@Html.Raw(Json.Encode(ABIPositive))></div> *@



<!--<canvas id="myChart" width="400" height="400"></canvas>-->

<div class="row">


<h2 class="h2 dataTable">Интерпретация показателя ИМТ </h2>
<canvas id="myBarChart1" ></canvas>

<h2 class="h2 dataTable">Интерпретация показателя SCORE </h2>
<canvas id="myBarChart2"></canvas>
 

</div>
<script>

    @*list*@

  /*  var randomScalingFactor = function () {


        var javascriptArray = JSON.parse($('#testName').attr('test-att'));


        return javascriptArray;

    }
    */


    var parseYValues = function () {
        var javascriptArray = JSON.parse($('#BMIy').attr('test-att'));
        return javascriptArray;
    }


    var parseXValues = function () {
        var javascriptArray = JSON.parse($('#BMIx').attr('test-att'));
        return javascriptArray;
    }

    var parseYValuesSCORE = function () {
        var javascriptArray = JSON.parse($('#SCOREy').attr('test-att'));
        return javascriptArray;
    }


    var parseXValuesSCORE = function () {
        var javascriptArray = JSON.parse($('#SCOREx').attr('test-att'));
        return javascriptArray;
    }


    /*var dataForAI = function ()
    {
        var posVal = JSON.parse($('#AI').attr('test-att'));
        var negVal = 100 - posVal;
        //var javascriptArray = JSON.stringify($('#negativeDates').attr('test-att'));
        javascriptArray = new Array(posVal, negVal);
        alert(posVal);

        return javascriptArray;
    }

    var dataForLI = function () {
        var posVal = JSON.parse($('#LI').attr('test-att'));
        var negVal = 100 - posVal;
        //var javascriptArray = JSON.stringify($('#negativeDates').attr('test-att'));
        javascriptArray = new Array(posVal, negVal);
        alert(posVal);

        return javascriptArray;
    }

    var dataForSclerosis = function () {
        var posVal = JSON.parse($('#Sclerosis').attr('test-att'));
        var negVal = 100 - posVal;
        //var javascriptArray = JSON.stringify($('#negativeDates').attr('test-att'));
        javascriptArray = new Array(posVal, negVal);
        alert(posVal);

        return javascriptArray;
    }

    var dataForABI = function () {
        var posVal = JSON.parse($('#ABI').attr('test-att'));
        var negVal = 100 - posVal;
        //var javascriptArray = JSON.stringify($('#negativeDates').attr('test-att'));
        javascriptArray = new Array(posVal, negVal);
        alert(posVal);

        return javascriptArray;
    }
    */
    var ctx1 = document.getElementById("myBarChart1");
    var myBarChart1 = new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: parseYValues(),
            datasets: [{
                label: 'уровень ИМТ',
                data: parseXValues(),
                backgroundColor: [
                  "gray",
     "#FF6384",
    "#FF9063",
     "#FFCE56",
    "#4BC0C0",
    "#68C0EB",
    "#36A2EB",
    "#687FEB"
                ]
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var ctx2 = document.getElementById("myBarChart2");
    var myBarChart2 = new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: parseYValuesSCORE(),
            datasets: [{
                label: 'уровень риска SCORE',
                data: parseXValuesSCORE(),
                backgroundColor: [
                    "gray",
            "#4BC0C0",
            "#FFCE56",
            "#FF9063",
            "#FF6384"
                ]
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

   /* var ctx1 = document.getElementById("myPieChart1");

    var myPieChart1 = new Chart(ctx1, {
        type: 'doughnut',
        data: {
            labels: [
    "Риск",
    "Нет риска",
            ],
            datasets: [
                {
                    data: dataForAI(),
                    backgroundColor: [
                        "#FF6384",
                        "#4BC0C0"
                    ],
                    hoverBackgroundColor: [
                        "#FF6384",
                         "#4BC0C0"
                    ]
                }]

        }
    });

    var ctx2 = document.getElementById("myPieChart2");
    var myPieChart2 = new Chart(ctx2, {
        type: 'doughnut',
        data: {
            labels: [
    "Риск",
    "Нет риска",
            ],
            datasets: [
                {
                    data: dataForLI(),
                    backgroundColor: [
                        "#FF6384",
                        "#4BC0C0"
                    ],
                    hoverBackgroundColor: [
                        "#FF6384",
                         "#4BC0C0"
                    ]
                }]

        }
    });

  
    var ctx3 = document.getElementById("myPieChart3");
    var myPieChart3 = new Chart(ctx3, {
        type: 'doughnut',
        data: {
            labels: [
    "Риск",
    "Нет риска",
            ],
            datasets: [
                {
                    data: dataForSclerosis(),
                    backgroundColor: [
                        "#FF6384",
                        "#4BC0C0"
                    ],
                    hoverBackgroundColor: [
                        "#FF6384",
                         "#4BC0C0"
                    ]
                }]

        }
    });

    var ctx4 = document.getElementById("myPieChart4");
    var myPieChart4 = new Chart(ctx4, {
        type: 'doughnut',
        data: {
            labels: [
    "Риск",
    "Нет риска",
            ],
            datasets: [
                {
                    data: dataForABI(),
                    backgroundColor: [
                        "#FF6384",
                        "#4BC0C0"
                    ],
                    hoverBackgroundColor: [
                        "#FF6384",
                         "#4BC0C0"
                    ]
                }]

        }
    });
    */

</script>



</text>
}


</section>