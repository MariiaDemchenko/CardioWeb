@model IEnumerable<CardiologicalResearch.Models.ExaminationResultsView>
@using CardiologicalResearch.Models;

<script src="~/Scripts/jquery-ui-1.8.24.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery-2.2.3.js"></script>
<link href="~/Content/TestsStyle.css" rel="stylesheet" />
@{
    ViewBag.Title = "TestingsHistory";
    List<ExaminationResultsView> items = ViewBag.UserExaminationResults;

    List<DateTime> PositiveDates = ViewBag.PositiveDates;
    List<int> PositiveNumbers = ViewBag.PositiveNumbers;

    List<DateTime> NegativeDates = ViewBag.NegativeDates;
    List<int> NegativeNumbers = ViewBag.NegativeNumbers;

    List<String> testName = ViewBag.TestName;
    List<int> testCount = ViewBag.TestCount;

    List<String> someString = new List<String>();
    int AI15Positive = (int)ViewBag.AI15Positive; 
    int LI15Positive = (int)ViewBag.LI15Positive;
    int SclerosisPositive = (int)ViewBag.SclerosisPositive;
    int ABIPositive = (int)ViewBag.ABIPositive;
    
    //List<ExaminationResultsView.>
    foreach (var item in items)
    {
         
    }
    
    List<int> list = new List<int>();
    list.Add(0);
    list.Add(1);
    list.Add(2);
    list.Add(3);
    list.Add(4);
    list.Add(5);
    object[] array = new object[5];
    array[0] = 0;
    array[1] = 1;



    var b = 10;
    string someVar="    ";
    string rowClass;
    
}

@{
    string CustomText = "Таблица результатов";
    string CustomTextEmpty = "Таблица результатов пуста";
}

@section featured {
    <section class="featured" id="personalData"></section>
}


<section class="content" id="dataTargetField">
    <h1 class="page-header">Личный кабинет</h1>
    <h1 class="page-header ph2">История тестирования</h1>

@if (Model.Count() == 0)
    {<text><h2 class="h2 dataTable">@CustomTextEmpty</h2></text>}
    else
    {<text>

    <h2 class="h2 dataTable">@CustomText</h2>


@*<div id="test" test-att=@Html.Raw(Json.Encode(items))></div> *@
<div id="testName" test-att=@Html.Raw(Json.Encode(testName))></div> 
<div id="testCount" test-att=@Html.Raw(Json.Encode(testCount))></div> 
@*<div id="numbers" test-att3=@Html.Raw(Json.Encode(Numbers))></div> *@
<script src="~/Scripts/Chart.js"></script>
<h2 hidden="hidden" id="variable">@list</h2>

<div id="AI" test-att=@Html.Raw(Json.Encode(AI15Positive))></div> 
<div id="LI" test-att=@Html.Raw(Json.Encode(LI15Positive))></div> 
<div id="Sclerosis" test-att=@Html.Raw(Json.Encode(SclerosisPositive))></div> 
<div id="ABI" test-att=@Html.Raw(Json.Encode(ABIPositive))></div> 

<!--<canvas id="myChart" width="400" height="400"></canvas>-->

<table class="table table-bordered table-hover table-striped"  >
    <tr>
        <th>
            @*Html.DisplayNameFor(model => model.ParameterId)*@
            Дата
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.ParameterId)*@
            Название теста
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.Value)*@
            Результат теста
        </th>
    </tr>
    
    @foreach (var item in Model)
    {
        if (item.ExaminationResult == TestResultType.Unknown)
        {
            rowClass = "warning"; 
        }
        else { rowClass = item.ExaminationResult.ToString(); }
        
        <tr class=@rowClass>
            <td >
                @Html.DisplayFor(modelItem => item.TestingDate)
            </td>
            <td >
                @if (item.TestName == TestType.ABI)
                        {
                            <text>
                        ЛПИ<0.9
                        </text> 
                        }
                        else if (item.TestName == TestType.Sclerosis)
                        {
                            <text>
                        Sclerosis a.tibialis
                        </text> 
                        }
                        else 
                        {
                             @Html.DisplayFor(modelItem => item.TestName)
                        }
                       
            </td>
            <td >
                @Html.DisplayFor(modelItem => item.ExaminationResult)
            </td>
        </tr>
    }

</table>

</text>
}


</section>